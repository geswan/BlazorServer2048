@using BlazorServer2048.Models
@using BlazorServer2048.Store
@using BlazorServer2048.Store.DashboardUseCase
@using GameEngine



<div class="container">
    <div class="d-flex flex-column justify-content-center vertical-box">

        <div class="row">

            <h4>Slide Control</h4>
        </div>
        <div class="row">

            <div class="col-md-1 offset-md-1">
                <button type="button" class="btn btn-primary" @onclick="((args) => OnDirectionUpdated(Direction.Up))">N</button>
            </div>
        </div>
        <div class="row">
            <div class="col-md-1 ">
                <button type="button" class="btn btn-primary" @onclick="((args) => OnDirectionUpdated(Direction.Left))">W</button>
            </div>
            <div class="col-md-1 offset-md-1">
                <button type="button" class="btn btn-primary" @onclick="((args) => OnDirectionUpdated(Direction.Right))">E</button>
            </div>
        </div>
        <div class="row">
            <div class="col-md-1 offset-md-1">
                <button type="button" class="btn btn-primary" @onclick="((args) => OnDirectionUpdated(Direction.Down))">S</button>
            </div>
        </div>
    </div>
</div>

@code {

    [Inject]
    private IState<DashboardState>? DashboardState { get; set; }
    [Inject]
    public IDispatcher? Dispatcher { get; set; }

    public void OnDirectionUpdated(Direction direction)
    {
        Dispatcher!.Dispatch(new DirectionSelectedAction(direction));

    }
}
